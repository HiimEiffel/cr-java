package com.tarik02.clashroyale.server.protocol.messages.server;

import com.tarik02.clashroyale.server.protocol.Info;
import com.tarik02.clashroyale.server.protocol.messages.Message;
import com.tarik02.clashroyale.server.protocol.messages.component.HomeChest;
import com.tarik02.clashroyale.server.utils.DataStream;
import com.tarik02.clashroyale.server.utils.Hex;

public class OwnHomeData extends Message {
	public static final short ID = Info.OWN_HOME_DATA;

	public long homeId;
	public String name;
	public int coins;
	public int gems;
	public int trophies;
	public int level;
	public int levelExperience;

	public String cardReleases; // JSON
	public String shopData; // JSON

	public HomeChest homeChests[];

	public OwnHomeData() {
		super(ID);

		homeId = 0;
		name = "";
		coins = 0;
		gems = 0;
		trophies = 0;
		level = 1;
		levelExperience = 0;

		cardReleases = "{\"ID\":\"CARD_RELEASE\",\"Params\":{\"Assassin\":\"20170324\"}}";
		shopData = "{\"Title\":\"Акция: мушкетер\",\"Subtitle\":\"Ограниченное предложение: ОДНА покупка!\",\"ShopOffers\":[{\"Rewards\":[{\"Type\":\"spell\",\"Amount\":12,\"Spell\":\"Musketeer\"}],\"Title\":\"Мушкетер\",\"Image\":{\"Path\":\"\\/beb549d758347b86f828e8663ded335f_shop_musketeer_stack_01.png\",\"Checksum\":\"beb549d758347b86f828e8663ded335f\",\"File\":\"shop_musketeer_stack_01.png\"},\"CostType\":\"gems\",\"Cost\":50,\"Template\":\"shop_item2_no_text\"},{\"Rewards\":[{\"Type\":\"spell\",\"Amount\":100,\"Spell\":\"Musketeer\"}],\"Title\":\"Мушкетер\",\"Image\":{\"Path\":\"\\/a75e1bd56828a1dab108fba1f8f661ed_shop_musketeer_stack_02.png\",\"Checksum\":\"a75e1bd56828a1dab108fba1f8f661ed\",\"File\":\"shop_musketeer_stack_02.png\"},\"CostType\":\"gems\",\"Cost\":380,\"Template\":\"shop_item2_no_text\"}]}";
		homeChests = new HomeChest[4];
		homeChests[1] = new HomeChest();
		homeChests[1].status = HomeChest.STATUS_OPENING;
		homeChests[1].ticksToOpen = 3 * 60 * 20 - 120;
		homeChests[1].openTicks = 3 * 60 * 20;
	}

	@Override
	public void encode(DataStream stream) {
		super.encode(stream);

		if (homeChests.length != 4) {
			throw new RuntimeException("homeChests.length must be 4");
		}

		stream.putBLong(homeId);
		stream.put(Hex.toByteArray("1201BC865DB0F6D2")); // Somebody says that it is timestamp, but when i tried to print some timestamp, client crashes
		stream.put(Hex.toByteArray("019995DD8F0B00030880EAE51881EAE5188DEAE51881FCD91A80FCD91A83EAE5188EEAE51882EAE5180880EAE51881EAE5188DEAE51881FCD91A80FCD91A83EAE51800000880EAE51881EAE5188DEAE51881FCD91A80FCD91A83EAE5180000FF01010000000000020000020100010E00000201000182010000040300018101000001000000040000010000000F008E8EDD17020200030300918EDD1701010002000000007F7FB2D8D28F0B01000322000000154D75736B657465657220537461636B204F6666657201909CB98F0B90E2C38F0B909CB98F0B0000000000000000000000154D75736B657465657220537461636B204F66666572")); // Unknown
		stream.putString(shopData);
		stream.put(Hex.toByteArray

		stream.putString(cardReleases);

		stream.put(Hex.toByteArray("00"));
		stream.put(Hex.toByteArray("04011303"));

		homeChests[1].encode(stream);

		stream.put(Hex.toByteArray

		stream.putString(name);
		stream.put(Hex.toByteArray("0002"));
		stream.putRrsInt32(trophies);
		stream.put(Hex.toByteArray(/*"00"*/"000000000000001E000000000007080501"));
		stream.putRrsInt32(coins);
		stream.put(Hex.toByteArray("0502070503040505BB02050D00050E06051002051D8888D54400063C04013C05013C06013C07083C08083C09080003050808050B1E051B01061A00051A01081A03071A0D0A1A0E021C000200"));
		stream.putRrsInt32(gems);
		stream.put(Hex.toByteArray("01"));
		stream.putRrsInt32(levelExperience);
		stream.putRrsInt32(level);
		stream.put(Hex.toByteArray("01000100000000000007000000D1C1C2CB02B6C1D88F0B89EA5E"));
	}

	@Override
	public void decode(DataStream stream) {
		super.decode(stream);
	}
}
